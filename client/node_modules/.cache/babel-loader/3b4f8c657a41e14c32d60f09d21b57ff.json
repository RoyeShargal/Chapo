{"ast":null,"code":"var _jsxFileName = \"/Users/royeshargal/MyProjects/Chapo/client/src/components/Post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./post.css\";\nimport React, { useEffect, useState } from \"react\";\nimport httpClient from \"../../httpClient\";\nimport { Link } from \"react-router-dom\";\nimport * as http from \"http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  aSinglePost\n}) {\n  _s();\n\n  const [user, setUser] = useState('');\n  const postID = aSinglePost.id;\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//127.0.0.1:5000/@me\");\n        setUser(resp.data);\n      } catch (e) {\n        console.log(\"Not Authenticated.\");\n      }\n    })();\n  }, []);\n  let postId = aSinglePost.id;\n  const arrayOfTags = aSinglePost.tags.split(' ');\n\n  const deletePost = async () => {\n    if (window.confirm(\"Delete?\")) {\n      await httpClient.post(\"//127.0.0.1:5000/deletepost\", {\n        postId\n      });\n    }\n  };\n\n  let userid;\n\n  if (user != null) {\n    userid = user.id;\n  } else {\n    userid = 0;\n  }\n\n  const likePost = async () => {\n    await httpClient.post(\"//127.0.0.1:5000/likeapost\", {\n      postId,\n      userid\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postTitle\",\n        children: aSinglePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postAuthor\",\n        children: [\"Created by \", aSinglePost.authorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postContent\",\n        children: [aSinglePost.content, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), arrayOfTags.map(tag => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tags\",\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postDate\",\n        children: [aSinglePost.date, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), user.email != null ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-heart like \",\n        onClick: likePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"YVwObdFMy0qYA5qi/wSWK3oHzn4=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/royeshargal/MyProjects/Chapo/client/src/components/Post/Post.jsx"],"names":["React","useEffect","useState","httpClient","Link","http","Post","aSinglePost","user","setUser","postID","id","resp","get","data","e","console","log","postId","arrayOfTags","tags","split","deletePost","window","confirm","post","userid","likePost","title","authorName","content","map","tag","date","email"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AACA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EACf;AAAA;;AACI,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAE,EAAF,CAA/B;AAEA,QAAMQ,MAAM,GAAGH,WAAW,CAACI,EAA3B;AAEAV,EAAAA,SAAS,CAAC,MAAI;AACV,KAAC,YAAY;AACT,UAAI;AACA,cAAMW,IAAI,GAAG,MAAMT,UAAU,CAACU,GAAX,CAAe,sBAAf,CAAnB;AACAJ,QAAAA,OAAO,CAACG,IAAI,CAACE,IAAN,CAAP;AACH,OAHD,CAIA,OAAOC,CAAP,EAAS;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AACJ,KARD;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA,MAAIC,MAAM,GAAGX,WAAW,CAACI,EAAzB;AACA,QAAMQ,WAAW,GAAGZ,WAAW,CAACa,IAAZ,CAAiBC,KAAjB,CAAuB,GAAvB,CAApB;;AAEA,QAAMC,UAAU,GAAG,YAAa;AAC5B,QAAIC,MAAM,CAACC,OAAP,CAAe,SAAf,CAAJ,EAA+B;AAC3B,YAAMrB,UAAU,CAACsB,IAAX,CAAgB,6BAAhB,EAA8C;AAChDP,QAAAA;AADgD,OAA9C,CAAN;AAKH;AACJ,GARD;;AASA,MAAIQ,MAAJ;;AACA,MAAGlB,IAAI,IAAI,IAAX,EAAgB;AACfkB,IAAAA,MAAM,GAAGlB,IAAI,CAACG,EAAd;AAAiB,GADlB,MAEI;AACCe,IAAAA,MAAM,GAAC,CAAP;AACJ;;AACD,QAAMC,QAAQ,GAAG,YAAY;AACzB,UAAMxB,UAAU,CAACsB,IAAX,CAAgB,4BAAhB,EAA6C;AAC/CP,MAAAA,MAD+C;AAE/CQ,MAAAA;AAF+C,KAA7C,CAAN;AAKH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,kBAA8BnB,WAAW,CAACqB;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kCAAyCrB,WAAW,CAACsB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAE,aAAd;AAAA,mBAA8BtB,WAAW,CAACuB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKX,WAAW,CAACY,GAAZ,CAAiBC,GAAD,IAAS;AACtB,4BAAO;AAAG,UAAA,SAAS,EAAE,MAAd;AAAA,oBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CAJL,eAOI;AAAG,QAAA,SAAS,EAAE,UAAd;AAAA,mBAA2BzB,WAAW,CAAC0B,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQKzB,IAAI,CAAC0B,KAAL,IAAc,IAAd,gBACG;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAkC,QAAA,OAAO,EAAEP;AAA3C;AAAA;AAAA;AAAA;AAAA,cADH,gBAEE;AAAA;AAAA;AAAA;AAAA,cAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GAnEuBrB,I;;KAAAA,I","sourcesContent":["import \"./post.css\"\nimport React, {useEffect, useState} from \"react\";\nimport httpClient from \"../../httpClient\";\nimport {Link} from \"react-router-dom\";\nimport * as http from \"http\";\nexport default function Post({aSinglePost})\n{\n    const [user,setUser] = useState( '')\n\n    const postID = aSinglePost.id\n\n    useEffect(()=>{\n        (async () => {\n            try {\n                const resp = await httpClient.get(\"//127.0.0.1:5000/@me\");\n                setUser(resp.data);\n            }\n            catch (e){\n                console.log(\"Not Authenticated.\")\n            }\n        })();\n    },[])\n\n    let postId = aSinglePost.id\n    const arrayOfTags = aSinglePost.tags.split(' ')\n\n    const deletePost = async  () => {\n        if (window.confirm(\"Delete?\")) {\n            await httpClient.post(\"//127.0.0.1:5000/deletepost\",{\n                postId\n            });\n\n\n        }\n    }\n    let userid;\n    if(user != null){\n     userid = user.id}\n    else{\n         userid=0;\n    }\n    const likePost = async () => {\n        await httpClient.post(\"//127.0.0.1:5000/likeapost\",{\n            postId,\n            userid\n\n        })\n    }\n\n    return(\n        <div className=\"post\">\n            <div>\n                <span className=\"postTitle\" >{aSinglePost.title}</span>\n                <span className=\"postAuthor\">Created by {aSinglePost.authorName}</span>\n                <p className={\"postContent\"}>{aSinglePost.content} </p>\n                {arrayOfTags.map((tag) => {\n                    return(<p className={\"tags\"}>{tag}</p>)\n                })}\n                <p className={\"postDate\"}>{aSinglePost.date} </p>\n                {user.email != null ? (\n                    <i className=\"far fa-heart like \" onClick={likePost}></i>\n                ):(<p></p>)}\n                {/*{aSinglePost.authorId === user.id ? (<i className=\"deletebtn far fa-trash-alt \" onClick={deletePost}/>)*/}\n                {/*    :*/}\n                {/*    (<p></p>)}*/}\n\n\n\n\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
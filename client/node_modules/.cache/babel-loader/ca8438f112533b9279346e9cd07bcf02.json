{"ast":null,"code":"var _jsxFileName = \"/Users/royeshargal/MyProjects/Asip/client/src/components/ChangePassword/changepassword.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport APIService from \"../APIService\";\nimport \"../SignUp/signup.css\";\nimport httpClient from \"../../httpClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = props => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmpassword, setConfirmPassword] = useState('');\n  const [userid, setUserid] = useState('');\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//127.0.0.1:5000/@me\");\n        setUser(resp.data);\n      } catch (e) {\n        console.log(\"Not Authenticated.\");\n      }\n    })();\n  }, []);\n\n  const changePassword = () => {\n    APIService.InsertPassword({\n      password\n    }).then(response => props.insertedUser(response)).catch(error => console.log('error', error));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log();\n\n    if (confirmpassword == password) {\n      changePassword();\n    } else {\n      window.alert(\"Passwords don't match!\");\n    }\n\n    setPassword('');\n    setConfirmPassword('');\n    console.log(\"Password Changed, Success\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"signupTitle\",\n      children: \" PASSWORD CHANGE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signupForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        minLength: 8,\n        maxLength: 20,\n        placeholder: \"Password\",\n        onChange: e => {\n          setPassword(e.target.value);\n          setUserid(user.id);\n        },\n        value: password,\n        className: \"signupInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        required: true,\n        minLength: 8,\n        maxLength: 20,\n        placeholder: \"Confirm Password\",\n        onChange: e => setConfirmPassword(e.target.value),\n        value: confirmpassword,\n        className: \"signupInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signupButton\",\n        children: \" Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePassword, \"JjlehtyFtV/YzmCaSoQteM1nrbA=\");\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/royeshargal/MyProjects/Asip/client/src/components/ChangePassword/changepassword.js"],"names":["useEffect","useState","APIService","httpClient","ChangePassword","props","user","setUser","password","setPassword","confirmpassword","setConfirmPassword","userid","setUserid","resp","get","data","e","console","log","changePassword","InsertPassword","then","response","insertedUser","catch","error","handleSubmit","event","preventDefault","window","alert","target","value","id"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport APIService from \"../APIService\";\nimport \"../SignUp/signup.css\"\nimport httpClient from \"../../httpClient\";\n\nconst ChangePassword = (props) => {\n    const [user,setUser] = useState( '')\n\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    const [userid,setUserid] = useState('')\n\n    useEffect(()=>{\n        (async () => {\n            try {\n                const resp = await httpClient.get(\"//127.0.0.1:5000/@me\");\n                setUser(resp.data);\n            }\n            catch (e){\n                console.log(\"Not Authenticated.\")\n            }\n        })();\n    },[])\n    const changePassword = () => {\n        APIService.InsertPassword({ password})\n            .then((response) => props.insertedUser(response))\n            .catch(error => console.log('error', error))\n    }\n\n    const handleSubmit = (event) => {\n\n        event.preventDefault()\n        console.log()\n        if(confirmpassword == password) {\n            changePassword()\n        }\n        else {\n            window.alert(\"Passwords don't match!\");\n        }\n            setPassword('')\n        setConfirmPassword('')\n        console.log(\"Password Changed, Success\")\n\n\n    }\n\n    return (\n        <div className='signup'>\n            <span className=\"signupTitle\"> PASSWORD CHANGE</span>\n\n            <form onSubmit={handleSubmit} className=\"signupForm\">\n\n\n                <input type='password'\n                       required\n                       minLength={8}\n                       maxLength={20}\n                       placeholder='Password'\n                       onChange={(e)=>{setPassword(e.target.value);setUserid(user.id)}}\n                       value={password}\n                       className='signupInput'/>\n                <input type='password'\n                       required\n                       minLength={8}\n                       maxLength={20}\n                       placeholder='Confirm Password'\n                       onChange={(e)=>setConfirmPassword(e.target.value)}\n                       value={confirmpassword}\n                       className='signupInput'/>\n\n                <button\n                    className='signupButton'\n                > Confirm\n                </button>\n            </form>\n\n        </div>\n    )\n\n}\n\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}
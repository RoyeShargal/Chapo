{"ast":null,"code":"var _jsxFileName = \"/Users/royeshargal/MyProjects/Chapo/client/src/components/Post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./post.css\";\nimport React, { useEffect, useState } from \"react\";\nimport httpClient from \"../../httpClient\";\nimport { Link } from \"react-router-dom\";\nimport * as http from \"http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  aSinglePost\n}) {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [comments, setComments] = useState([]);\n  const postID = aSinglePost.id;\n  useEffect(() => {\n    (async () => {\n      try {\n        const resp = await httpClient.get(\"//127.0.0.1:5000/@me\");\n        setUser(resp.data);\n      } catch (e) {\n        console.log(\"Not Authenticated.\");\n      }\n    })();\n  }, []);\n  let postId = aSinglePost.id;\n  const arrayOfTags = aSinglePost.tags.split(' ');\n\n  const deletePost = async () => {\n    if (window.confirm(\"Delete?\")) {\n      await httpClient.post(\"//127.0.0.1:5000/deletepost\", {\n        postId\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postTitle\",\n        children: aSinglePost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"postAuthor\",\n        children: [\"Created by \", aSinglePost.authorName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postContent\",\n        children: [aSinglePost.content, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), arrayOfTags.map(tag => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tags\",\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postDate\",\n        children: [aSinglePost.date, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), aSinglePost.authorId === user.id ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"deletebtn far fa-trash-alt \",\n        onClick: deletePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 54\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"28po7igEnks15ZLiOtH33eUWHsA=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/royeshargal/MyProjects/Chapo/client/src/components/Post/Post.jsx"],"names":["React","useEffect","useState","httpClient","Link","http","Post","aSinglePost","user","setUser","comments","setComments","postID","id","resp","get","data","e","console","log","postId","arrayOfTags","tags","split","deletePost","window","confirm","post","title","authorName","content","map","tag","date","authorId"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AACA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EACf;AAAA;;AACI,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAE,EAAF,CAA/B;AAGA,QAAM,CAACQ,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMU,MAAM,GAAGL,WAAW,CAACM,EAA3B;AAEAZ,EAAAA,SAAS,CAAC,MAAI;AACV,KAAC,YAAY;AACT,UAAI;AACA,cAAMa,IAAI,GAAG,MAAMX,UAAU,CAACY,GAAX,CAAe,sBAAf,CAAnB;AACAN,QAAAA,OAAO,CAACK,IAAI,CAACE,IAAN,CAAP;AACH,OAHD,CAIA,OAAOC,CAAP,EAAS;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH;AACJ,KARD;AASH,GAVQ,EAUP,EAVO,CAAT;AAYA,MAAIC,MAAM,GAAGb,WAAW,CAACM,EAAzB;AACA,QAAMQ,WAAW,GAAGd,WAAW,CAACe,IAAZ,CAAiBC,KAAjB,CAAuB,GAAvB,CAApB;;AAEA,QAAMC,UAAU,GAAG,YAAa;AAC5B,QAAIC,MAAM,CAACC,OAAP,CAAe,SAAf,CAAJ,EAA+B;AAC3B,YAAMvB,UAAU,CAACwB,IAAX,CAAgB,6BAAhB,EAA8C;AAChDP,QAAAA;AADgD,OAA9C,CAAN;AAKH;AACJ,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,kBAA8Bb,WAAW,CAACqB;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kCAAyCrB,WAAW,CAACsB,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAE,aAAd;AAAA,mBAA8BtB,WAAW,CAACuB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKT,WAAW,CAACU,GAAZ,CAAiBC,GAAD,IAAS;AACtB,4BAAO;AAAG,UAAA,SAAS,EAAE,MAAd;AAAA,oBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CAJL,eAOI;AAAG,QAAA,SAAS,EAAE,UAAd;AAAA,mBAA2BzB,WAAW,CAAC0B,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQK1B,WAAW,CAAC2B,QAAZ,KAAyB1B,IAAI,CAACK,EAA9B,gBAAoC;AAAG,QAAA,SAAS,EAAC,6BAAb;AAA2C,QAAA,OAAO,EAAEW;AAApD;AAAA;AAAA;AAAA;AAAA,cAApC,gBAEI;AAAA;AAAA;AAAA;AAAA,cAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GArDuBlB,I;;KAAAA,I","sourcesContent":["import \"./post.css\"\nimport React, {useEffect, useState} from \"react\";\nimport httpClient from \"../../httpClient\";\nimport {Link} from \"react-router-dom\";\nimport * as http from \"http\";\nexport default function Post({aSinglePost})\n{\n    const [user,setUser] = useState( '')\n\n\n    const [comments,setComments] = useState([])\n    const postID = aSinglePost.id\n\n    useEffect(()=>{\n        (async () => {\n            try {\n                const resp = await httpClient.get(\"//127.0.0.1:5000/@me\");\n                setUser(resp.data);\n            }\n            catch (e){\n                console.log(\"Not Authenticated.\")\n            }\n        })();\n    },[])\n\n    let postId = aSinglePost.id\n    const arrayOfTags = aSinglePost.tags.split(' ')\n\n    const deletePost = async  () => {\n        if (window.confirm(\"Delete?\")) {\n            await httpClient.post(\"//127.0.0.1:5000/deletepost\",{\n                postId\n            });\n\n\n        }\n    }\n\n    return(\n        <div className=\"post\">\n            <div>\n                <span className=\"postTitle\" >{aSinglePost.title}</span>\n                <span className=\"postAuthor\">Created by {aSinglePost.authorName}</span>\n                <p className={\"postContent\"}>{aSinglePost.content} </p>\n                {arrayOfTags.map((tag) => {\n                    return(<p className={\"tags\"}>{tag}</p>)\n                })}\n                <p className={\"postDate\"}>{aSinglePost.date} </p>\n                {aSinglePost.authorId === user.id ? (<i className=\"deletebtn far fa-trash-alt \" onClick={deletePost}/>)\n                    :\n                    (<p></p>)}\n\n\n\n\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}